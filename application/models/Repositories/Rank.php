<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\DBAL\Types\Type;

/**
 * Rank Repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Rank extends EntityRepository
{
    
  /**
   * 
   * 
   * @param unknown_type $platformID
   */
  public function hot($platformID, $count=5)
  {
    
    $rsm = new ResultSetMapping;
    
    $rsm->addEntityResult('Entities\Rank', 'r');
    $rsm->addEntityResult('Entities\Game', 'g');
    $rsm->addFieldResult('r', 'id', 'id');
    $rsm->addFieldResult('r', 'rank', 'rank');
    $rsm->addFieldResult('r', 'game', 'game_id');
    $rsm->addJoinedEntityResult('Entities\Game' , 'g', 'r', 'game');
    $rsm->addFieldResult('g', 'g_id', 'id');
    $rsm->addFieldResult('g', 'asin', 'asin');
    $rsm->addFieldResult('g', 'name', 'name');
    $rsm->addFieldResult('g', 'price', 'price');
    
    // TODO: Pulling the price column is intermittently working? WTF? Some
    // rows return the price, some don't. What gives?
    $query = $this->_em->createNativeQuery('
      SELECT r.id, r.rank, g.id as `g_id`, g.asin, g.name, g.price
      FROM ranks r
      LEFT JOIN games g
       ON r.game_id = g.id 
      WHERE g.platform_id = ?
      GROUP BY g.asin 
      ORDER BY r.rank ASC, r.created DESC 
      LIMIT ?
    ', $rsm);
    
    $query->setParameter(1, $platformID, Type::INTEGER);
    $query->setParameter(2, $count, Type::INTEGER);
    
    return $query->getResult();
    
  }  
  

}