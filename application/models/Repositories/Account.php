<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\DBAL\Types\Type;

/**
 * Account
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Account extends EntityRepository
{
    
  public function getNearbyAccounts($account, $distance)
  {
    
    $rsm = new ResultSetMapping;
    
    $rsm->addEntityResult('Entities\Account', 'a');
    $rsm->addFieldResult('a', 'id', 'id');
    $rsm->addFieldResult('a', 'username', 'username');
    $rsm->addFieldResult('a', 'zip', 'zip');
    $rsm->addFieldResult('a', 'latitude', 'latitude');
    $rsm->addFieldResult('a', 'longitude', 'longitude');
    $rsm->addFieldResult('a', 'confirmed', 'confirmed');    
    
    $query = $this->_em->createNativeQuery(
      "SELECT a.id, a.username, a.zip, a.latitude, a.longitude, a.confirmed, 
        ( 3959 * acos( cos( radians(?) ) * cos( radians( a.latitude ) ) * 
        cos( radians( a.longitude ) - radians(?) ) + sin( radians(?) ) * 
        sin( radians( a.latitude ) ) ) ) AS distance 
        FROM accounts a
        WHERE a.confirmed = 1
        GROUP BY a.id HAVING distance < ? 
        ORDER BY distance", $rsm
    );   
    
    $query->setParameter(1, $account->getLatitude());
    $query->setParameter(2, $account->getLongitude());
    $query->setParameter(3, $account->getLatitude());
    $query->setParameter(4, $distance, Type::INTEGER);
    
    return $query->getResult();
    
  }
  
  public function findOneByUsernameOrEmail($username, $email)
  {

    $rsm = new ResultSetMapping;
    
    $rsm->addEntityResult('Entities\Account', 'a');
    $rsm->addFieldResult('a', 'id', 'id');
    $rsm->addFieldResult('a', 'username', 'username');
    $rsm->addFieldResult('a', 'email', 'email');
    
    $query = $this->_em->createNativeQuery(
      'SELECT a.id, a.username, a.email FROM accounts a 
         WHERE a.username = :username OR a.email = :email',
      $rsm
    );
    
    $query->setParameter('username', $username);
    $query->setParameter('email', $email);
    
    return $query->getResult();    
    
  }
  
}